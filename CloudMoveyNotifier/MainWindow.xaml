<Controls:MetroWindow 
    x:Class="CloudMoveyNotifier.MainWindow" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    Icon="cloudmovey.ico"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    
    xmlns:local="clr-namespace:CloudMoveyNotifier"
    xmlns:model="clr-namespace:CloudMoveyNotifier.Models"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
    ContentRendered="Window_ContentRendered"
    EnableDWMDropShadow="True"   
    Background="#F9FCF6"
    Loaded="OnWindowLoaded"
    Title="CloudMovey Worker" Height="666.671" Width="1269.191" Closing="OnClose" StateChanged="OnStateChanged" IsVisibleChanged="OnIsVisibleChanged">

    <Controls:MetroWindow.Resources>

        <ResourceDictionary>
            
            <DataTemplate x:Key="platform_description">
                
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="25" Height="25" Margin="0,5,0,0" ToolTip="Platform" Stretch="Uniform">
                        <ContentControl Content="{DynamicResource dimensiondata}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding description}" Value="Dimension Data">
                                            <Setter Property="Content" Value="{DynamicResource dimensiondata}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding description}" Value="VMWare">
                                            <Setter Property="Content" Value="{DynamicResource vmware}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding description}" Value="Hyper-V">
                                            <Setter Property="Content" Value="{DynamicResource hyper-v}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=description}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Shared="False" x:Key="workload_resources">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="30" Height="30" ToolTip="Workload CPU Count" Stretch="Uniform">
                        <ContentControl Focusable="true" Content="{DynamicResource appbar_workload}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=workload_cpu}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Workload Memory Capacity" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{DynamicResource appbar_network_workload_connecting}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=workload_memory}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Workload Storage Capacity" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{DynamicResource appbar_network}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=workload_storage}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Shared="False" x:Key="platform_resources">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="30" Height="30" ToolTip="Workload Count" Stretch="Uniform">
                        <ContentControl Focusable="true" Content="{DynamicResource appbar_workload}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=workload_count}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Logical Network Count" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{DynamicResource appbar_network_workload_connecting}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=vlan_count}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Network Domain Count" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{DynamicResource appbar_network}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding Path=networkdomain_count}"/>
                </StackPanel>
            </DataTemplate>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
            <Style x:Key="alternatingStyle" TargetType="{x:Type ListViewItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#F9FCF6"></Setter>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="White"></Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#BAD895"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- the context menu for all tree view items -->

            <ContextMenu  x:Key="TreeViewItemContextMenu" StaysOpen="true">
                <MenuItem Header="Add" Click="Failovergroup_add_click"/>
                <MenuItem Header="Update"  Click="Failovergroup_update_click"/>
                <MenuItem Header="Destroy"  Click="Failovergroup_destroy_click"/>
                <Separator/>
                <MenuItem Header="Move up" Click="Failovergroup_moveup_click"/>
                <MenuItem Header="Move Down" Click="Failovergroup_movedown_click"/>
            </ContextMenu>

            <!-- the data template for all tree view items -->
            <HierarchicalDataTemplate x:Key="TreeViewItemTemplate">
                <TextBlock x:Name="TextBlock" Text="{Binding Text}" ContextMenu="{StaticResource TreeViewItemContextMenu}" />
                <HierarchicalDataTemplate.Triggers>

                </HierarchicalDataTemplate.Triggers>

            </HierarchicalDataTemplate>
            
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Resources/logos.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
        </ResourceDictionary>


    </Controls:MetroWindow.Resources>
        <!-- the window button commands -->
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button ToolTip="Copy Worker GUID to Clipboard" Click="copy_guid_button_clicked">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="38" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_cloud_download}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid>
        <TabControl Grid.Row="0" Height="451" DockPanel.Dock="Top"  Controls:TabControlHelper.IsUnderlined="True" x:Name="tabControl" Margin="10,10,10,178" Background="#E8F2DC">
            <TabItem Header="Application Groups" Controls:ControlsHelper.HeaderFontSize="18">
                <Grid Margin="5,5,5,5" Name="ApplicationGroupGrid">
                    <TreeView x:Name="Failovergroup_treeview" ContextMenu="{StaticResource TreeViewItemContextMenu}" Margin="0,0,0,0" HorizontalAlignment="Left" Width="248">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate  DataType="{x:Type model:Failovergroup_TreeModel}"  ItemsSource="{Binding children}">
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox  Width="25" Height="25" Stretch="Uniform">
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding group_type}" Value="10">
                                                            <Setter Property="Content" Value="{DynamicResource appbar_palmtree}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding group_type}" Value="0">
                                                            <Setter Property="Content" Value="{DynamicResource appbar_map_location}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding group_type}" Value="1">
                                                            <Setter Property="Content" Value="{DynamicResource appbar_cog}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding group_type}" Value="2">
                                                            <Setter Property="Content" Value="{DynamicResource appbar_browser_wire}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding group_type}" Value="3">
                                                            <Setter Property="Content" Value="{DynamicResource appbar_people_multiple}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </Viewbox>
                                    <TextBlock Text="{Binding group}" Margin="4,4,4,0"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    <ListView Name="lvWorkloads" Margin="263,0,0,0" SizeChanged="lvWorkloads_SizeChanged"  Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="150" DisplayMemberBinding="{Binding hostname}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Workload</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="150" DisplayMemberBinding="{Binding platform}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Platform</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="100" DisplayMemberBinding="{Binding human_credential}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Credentials</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="100" DisplayMemberBinding="{Binding human_os}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">OS</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource workload_resources}">

                                </GridViewColumn>
                                <GridViewColumn Header="Actions" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Margin="5,0,0,0" Name="delete_workload_button" Click="delete_workload_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                                <Button Margin="5,0,0,0" Name="refresh_workload_button" Click="refresh_workload_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_inbox_in}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Platforms" Controls:ControlsHelper.HeaderFontSize="18">
                <Grid Margin="5" Name="PlatformGrid">

                    <ListView Name="lvPlatforms" SizeChanged="lvPlatforms_SizeChanged" Margin="0,40,0,0" Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                        <ListView.View>
                            <GridView x:Name="platform_grid"  >

                                <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource platform_description}">

                                </GridViewColumn>
                                <GridViewColumn Width="150" DisplayMemberBinding="{Binding human_vendor}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Vendor</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn  Width="100" DisplayMemberBinding="{Binding platform_version}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Version</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource platform_resources}">

                                </GridViewColumn>
                                <GridViewColumn Header="Actions" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Name="update_platform_button" Click="update_platform_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit_box}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                                <Button Margin="5,0,0,0" Name="delete_platform_button" Click="delete_platform_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                                <Button Margin="5,0,0,0" Name="refresh_platform_button" Click="refresh_platform_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_inbox_in}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Controls:ProgressRing Name="progress_indicator" Height="30" Margin="5,5,0,0" IsEnabled="True" IsActive="True" HorizontalAlignment="Left" Width="30" VerticalAlignment="Top" />

                    <Button Width="30" Margin="0,0,39,0" ToolTip="Refresh platform list from worker service" HorizontalAlignment="Right" Height="30" VerticalAlignment="Top" Click="refresh_platforms_button_clicked">
                        <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                          Visual="{DynamicResource appbar_refresh}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Button ToolTip="Add platform to worker list" Click="add_platforms_button_clicked" HorizontalAlignment="Right" Width="30" Height="30" VerticalAlignment="Top">
                        <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                          Visual="{DynamicResource appbar_add}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Label x:Name="progress_message" Content="" HorizontalAlignment="Left" Margin="40,5,0,0" VerticalAlignment="Top" Height="31" Width="421"/>
                </Grid>
            </TabItem>
            <TabItem Header="Credentials" Controls:ControlsHelper.HeaderFontSize="18">
                <Grid Margin="5,5,5,5" Name="CredentialGrid">

                    <ListView Name="lvCredentials" Margin="0,40,0,0" SizeChanged="lvCredentials_SizeChanged" Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="250" DisplayMemberBinding="{Binding description}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="platform">Credential</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="200" DisplayMemberBinding="{Binding username}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Username">Username</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Width="200" DisplayMemberBinding="{Binding human_type}">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Tag="Type">Type</GridViewColumnHeader>
                                    </GridViewColumn.Header>
                                </GridViewColumn>
                                <GridViewColumn Header="Actions" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Name="update_credential_button" Click="update_credential_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit_box}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                                <Button Margin="5,0,0,0" Name="delete_credential_button" Click="delete_credential_button">
                                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Button Width="30" Margin="0,0,39,0" ToolTip="Refresh credentials list from worker service" HorizontalAlignment="Right" Click="refresh_credentials_button_clicked" Height="30" VerticalAlignment="Top">
                        <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                          Visual="{DynamicResource appbar_refresh}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Button Width="30" HorizontalAlignment="Right" ToolTip="Add credential to worker service" Height="30" VerticalAlignment="Top" Click="add_credentials_button_clicked">
                        <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                          Visual="{DynamicResource appbar_add}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </Grid>
            </TabItem>
            
        </TabControl>
            <ListView Name="lvEvents" Margin="10,466,10,10" SizeChanged="lvWorkloads_SizeChanged"  Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding hostname}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="platform">Workload</GridViewColumnHeader>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding platform}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="platform">Platform</GridViewColumnHeader>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding human_credential}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="platform">Credentials</GridViewColumnHeader>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding human_os}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="platform">OS</GridViewColumnHeader>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource workload_resources}">

                        </GridViewColumn>
                        <GridViewColumn Header="Actions" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Margin="5,0,0,0" Name="delete_workload_button" Click="delete_workload_button">
                                            <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Margin="5,0,0,0" Name="refresh_workload_button" Click="refresh_workload_button">
                                            <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_inbox_in}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

    </Grid>
</Controls:MetroWindow>
    