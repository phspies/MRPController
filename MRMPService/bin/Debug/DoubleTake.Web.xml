<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DoubleTake.Web</name>
    </assembly>
    <members>
        <member name="T:DoubleTake.Argument">
            <summary>
            Provides argument validation methods.
            </summary>
        </member>
        <member name="M:DoubleTake.Argument.NotNull``1(``0,System.String)">
            <summary>
            Ensures that the specified argument value is not null.
            </summary>
            <typeparam name="T">The type of the parameter.</typeparam>
            <param name="value">The parameter value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> was <see langword="null"/>.</exception>
        </member>
        <member name="M:DoubleTake.Argument.NotNullOrEmpty(System.String,System.String)">
            <summary>
            Ensures that the specified argument is not null or empty.
            </summary>
            <param name="value">The value.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> was <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="value"/> was an empty string.</exception>
        </member>
        <member name="M:DoubleTake.Argument.RootPath(System.Uri,System.String)">
            <summary>
            Ensures that the specified argument value represents a root path.
            </summary>
            <param name="uri">The URI to validate.</param>
            <param name="parameterName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> was null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="uri"/> must specify a root path.</exception>
        </member>
        <member name="T:DoubleTake.Web.HttpConfigurationExtensions">
            <summary>
            Extension methods for <see cref="T:System.Web.Http.HttpConfiguration"/>.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.HttpConfigurationExtensions.EnableDoubleTakeSwagger(System.Web.Http.HttpConfiguration,System.Collections.Generic.IEnumerable{System.String},System.Action{Swashbuckle.Application.SwaggerDocsConfig})">
            <summary>
            Enables Swagger with defaults set for documenting Double-Take APIs.
            </summary>
            <param name="httpConfig">The HTTP configuration.</param>
            <param name="xmlDocumentFiles">A collection of XML documentation files to include.</param>
            <param name="configure">An action for further customizing the Swagger configuration.</param>
            <returns>A <see cref="T:Swashbuckle.Application.SwaggerEnabledConfiguration"/> that can be used to enable the Swagger UI.</returns>
        </member>
        <member name="M:DoubleTake.Web.HttpConfigurationExtensions.EnableDoubleTakeSwagger(System.Web.Http.HttpConfiguration,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Enables Swagger with defaults set for documenting Double-Take APIs.
            </summary>
            <param name="httpConfig">The HTTP configuration.</param>
            <param name="xmlDocumentFiles">A collection of XML documentation files to include.</param>
            <returns>A <see cref="T:Swashbuckle.Application.SwaggerEnabledConfiguration"/> that can be used to enable the Swagger UI.</returns>
        </member>
        <member name="M:DoubleTake.Web.HttpConfigurationExtensions.EnableDoubleTakeSwagger(System.Web.Http.HttpConfiguration)">
            <summary>
            Enables Swagger with defaults set for documenting Double-Take APIs.
            </summary>
            <param name="httpConfig">The HTTP configuration.</param>
            <returns>A <see cref="T:Swashbuckle.Application.SwaggerEnabledConfiguration"/> that can be used to enable the Swagger UI.</returns>
        </member>
        <member name="M:DoubleTake.Web.HttpConfigurationExtensions.EnableDoubleTakeSwagger(System.Web.Http.HttpConfiguration,System.Action{Swashbuckle.Application.SwaggerDocsConfig})">
            <summary>
            Enables Swagger with defaults set for documenting Double-Take APIs.
            </summary>
            <param name="httpConfig">The HTTP configuration.</param>
            <param name="configure">An action for further customizing the Swagger configuration.</param>
            <returns>A <see cref="T:Swashbuckle.Application.SwaggerEnabledConfiguration"/> that can be used to enable the Swagger UI.</returns>
        </member>
        <member name="T:DoubleTake.Web.Http.ApiControllerExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.Web.Http.ApiController"/>.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Accepted``1(System.Web.Http.ApiController,``0)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> (202 Accepted).
            </summary>
            <typeparam name="TContent">The type of the content in the entity body.</typeparam>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="content">The content value to negotiate and format in the entity body.</param>
            <returns>An <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> with the specified values.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Accepted``1(System.Web.Http.ApiController,System.Uri,``0)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> (202 Accepted).
            </summary>
            <typeparam name="TContent">The type of the content in the entity body.</typeparam>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="location">The location URI to place in the Location header of the response.</param>
            <param name="content">The content value to negotiate and format in the entity body.</param>
            <returns>An <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> with the specified values.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Accepted``1(System.Web.Http.ApiController,System.String,``0)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> (202 Accepted).
            </summary>
            <typeparam name="TContent">The type of the content in the entity body.</typeparam>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="location">The location URI to place in the Location header of the response.</param>
            <param name="content">The content value to negotiate and format in the entity body.</param>
            <returns>An <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> with the specified values.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Error(System.Web.Http.ApiController,DoubleTake.Web.Models.ErrorResponseModel)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/>.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="content">The error content.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Error(System.Web.Http.ApiController,System.Net.HttpStatusCode,System.String)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/>.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="statusCode">The status code.</param>
            <param name="message">The message.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Error(System.Web.Http.ApiController,System.Net.HttpStatusCode,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/>.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="statusCode">The status code.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.Error(System.Web.Http.ApiController,System.Net.HttpStatusCode,System.String,DoubleTake.Web.Models.ErrorDetailsModel[])">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/>.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="statusCode">The status code.</param>
            <param name="message">The message.</param>
            <param name="errors">The errors.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.NoContent(System.Web.Http.ApiController)">
            <summary>
            Creates a <see cref="T:System.Web.Http.Results.StatusCodeResult"/> for no content (204 No Content).
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <returns>A <see cref="T:System.Web.Http.Results.StatusCodeResult"/> with a 204 status code.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.NotFound(System.Web.Http.ApiController,System.String)">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with a <see cref="F:System.Net.HttpStatusCode.NotFound"/> (404 Not Found) status.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="message">The message.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="M:DoubleTake.Web.Http.ApiControllerExtensions.NotFound(System.Web.Http.ApiController,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with a <see cref="F:System.Net.HttpStatusCode.NotFound"/> (404 Not Found) status.
            </summary>
            <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> with the specified status code and content.</returns>
        </member>
        <member name="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1">
            <summary>
            Represents an action result performs content negotiation and returns
            <see cref="F:System.Net.HttpStatusCode.Accepted"/> when it succeeds.
            </summary>
            <typeparam name="TContent">The content type.</typeparam>
        </member>
        <member name="M:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1.#ctor(`0,System.Web.Http.ApiController)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1.#ctor(`0,System.Uri,System.Web.Http.ApiController)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="location">The location URI to place in the Location header of the response.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:DoubleTake.Web.Http.Results.AcceptedNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Http.Results.ErrorResult">
            <summary>
            Represents an action result for errors.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Http.Results.ErrorResult.#ctor(DoubleTake.Web.Models.ErrorResponseModel,System.Web.Http.ApiController)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Http.Results.ErrorResult"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:DoubleTake.Web.Parsing.BinaryExpressionNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for binary expressions.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.BinaryExpressionNode.#ctor(DoubleTake.Web.Parsing.ParseNode,System.String,DoubleTake.Web.Parsing.ParseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.BinaryExpressionNode"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="op">The op.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:DoubleTake.Web.Parsing.BinaryExpressionNode.Left">
            <summary>
            Gets the left hand side of the binary expression.
            </summary>
            <value>
            The left hand side.
            </value>
        </member>
        <member name="P:DoubleTake.Web.Parsing.BinaryExpressionNode.Operator">
            <summary>
            Gets the operator of the binary expression.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="P:DoubleTake.Web.Parsing.BinaryExpressionNode.Right">
            <summary>
            Gets the right hand side of the binary expression.
            </summary>
            <value>
            The right hand side.
            </value>
        </member>
        <member name="M:DoubleTake.Web.Parsing.BinaryExpressionNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Parsing.BooleanExpressionNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for boolean expressions.
            </summary>
        </member>
        <member name="T:DoubleTake.Web.Parsing.BooleanPropertyNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for boolean properties.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.BooleanPropertyNode.#ctor(DoubleTake.Web.Parsing.PropertyNode)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.BooleanPropertyNode"/> class.
            </summary>
            <param name="propertyNode">The property node.</param>
        </member>
        <member name="M:DoubleTake.Web.Parsing.BooleanPropertyNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Parsing.FieldsParameter">
            <summary>
            Provides a <see cref="T:DoubleTake.Parsing.Parser`2"/> for parsing the "fields" query parameter.
            </summary>
        </member>
        <member name="P:DoubleTake.Web.Parsing.FieldsParameter.Parser">
            <summary>
            Gets the parser for parsing "fields" query parameters.
            </summary>
            <value>
            The parser.
            </value>
        </member>
        <member name="T:DoubleTake.Web.Parsing.FilterOperators">
            <summary>
            Provides string constants for the filter operators.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.AndOperator">
            <summary>
            The and operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.EqualsOperator">
            <summary>
            The equals operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.GreaterThanOperator">
            <summary>
            The greater than operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.GreaterThanOrEqualsOperator">
            <summary>
            The greater than or equals operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.LessThanOperator">
            <summary>
            The less than operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.LessThanOrEqualsOperator">
            <summary>
            The less than or equals operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.NotEqualsOperator">
            <summary>
            The not equals operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.NotOperator">
            <summary>
            The not operator.
            </summary>
        </member>
        <member name="F:DoubleTake.Web.Parsing.FilterOperators.OrOperator">
            <summary>
            The or operator.
            </summary>
        </member>
        <member name="P:DoubleTake.Web.Parsing.FilterOperators.All">
            <summary>
            Gets all the operators.
            </summary>
            <value>
            All the operators.
            </value>
        </member>
        <member name="M:DoubleTake.Web.Parsing.FilterOperators.ValidateOperatorArgument(System.String,System.String)">
            <summary>
            Validates the argument.
            </summary>
            <param name="op">The op.</param>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="T:DoubleTake.Web.Parsing.FilterParameter">
            <summary>
            Provides a <see cref="T:DoubleTake.Parsing.Parser`2"/> for parsing the "filter" query parameter.
            </summary>
        </member>
        <member name="P:DoubleTake.Web.Parsing.FilterParameter.Parser">
            <summary>
            Gets the parser for parsing "filter" query parameters.
            </summary>
            <value>
            The parser.
            </value>
        </member>
        <member name="T:DoubleTake.Web.Parsing.NotNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for unary not operations.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.NotNode.#ctor(DoubleTake.Web.Parsing.BooleanExpressionNode)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.NotNode"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:DoubleTake.Web.Parsing.NotNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Parsing.ParseNode">
            <summary>
            Represents a node in the AST created when parsing web queries.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.ParseNode.BuildExpression(System.Linq.Expressions.Expression)">
            <summary>
            Builds an <see cref="T:System.Linq.Expressions.Expression"/> from the parsed input at the position in the AST represented
            by this instance.
            </summary>
            <param name="item">The item.</param>
            <returns>An <see cref="T:System.Linq.Expressions.Expression"/> built from the AST.</returns>
        </member>
        <member name="T:DoubleTake.Web.Parsing.Property">
            <summary>
            Provides a <see cref="T:DoubleTake.Parsing.Parser`2"/> for parsing the property names.
            </summary>
        </member>
        <member name="P:DoubleTake.Web.Parsing.Property.Parser">
            <summary>
            Gets the parser used for parsing property names..
            </summary>
            <value>
            The parser.
            </value>
        </member>
        <member name="T:DoubleTake.Web.Parsing.PropertyNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for properties.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.PropertyNode.#ctor(System.String,DoubleTake.Parsing.ParsePosition)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.PropertyNode"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="position">The position.</param>
        </member>
        <member name="P:DoubleTake.Web.Parsing.PropertyNode.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:DoubleTake.Web.Parsing.PropertyNode.Property">
            <summary>
            Gets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="M:DoubleTake.Web.Parsing.PropertyNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Parsing.SortNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for sorting.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.SortNode.#ctor(DoubleTake.Web.Parsing.PropertyNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.SortNode"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="descending">if set to <see langword="true" /> [descending].</param>
        </member>
        <member name="P:DoubleTake.Web.Parsing.SortNode.IsDescending">
            <summary>
            Gets a value indicating whether or not descending sort is to be used.
            </summary>
            <value>
            <see langword="true" /> if descending sort is to be used; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:DoubleTake.Web.Parsing.SortNode.Property">
            <summary>
            Gets the property to sort by.
            </summary>
            <value>
            The property to sort by.
            </value>
        </member>
        <member name="M:DoubleTake.Web.Parsing.SortNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="M:DoubleTake.Web.Parsing.SortNode.Sort``1(System.Boolean,System.Linq.IQueryable{``0})">
            <summary>
            Sorts the <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="first">if set to <see langword="true" /> this is the first sort parameter.</param>
            <param name="source">The source.</param>
            <returns>The sorted query.</returns>
        </member>
        <member name="T:DoubleTake.Web.Parsing.SortParameter">
            <summary>
            Provides a <see cref="T:DoubleTake.Parsing.Parser`2"/> for parsing the "sort" query parameter.
            </summary>
        </member>
        <member name="P:DoubleTake.Web.Parsing.SortParameter.Parser">
            <summary>
            Gets the parser for parsing "sort" query parameters.
            </summary>
            <value>
            The parser.
            </value>
        </member>
        <member name="T:DoubleTake.Web.Parsing.ValueNode">
            <summary>
            A <see cref="T:DoubleTake.Web.Parsing.ParseNode"/> for values.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Parsing.ValueNode.#ctor(DoubleTake.Parsing.ParsePosition,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Parsing.ValueNode"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:DoubleTake.Web.Parsing.ValueNode.BuildExpression(System.Linq.Expressions.Expression)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Swagger.Providers.CachingSwaggerProvider">
            <summary>
            A Swagger provider that caches the schema.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Swagger.Providers.CachingSwaggerProvider.#ctor(Swashbuckle.Swagger.ISwaggerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:DoubleTake.Web.Swagger.Providers.CachingSwaggerProvider"/> class.
            </summary>
            <param name="baseProvider">The base swagger provider.</param>
        </member>
        <member name="M:DoubleTake.Web.Swagger.Providers.CachingSwaggerProvider.GetSwagger(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.Swagger.CustomSwaggerDocumentFilter">
            <summary>
            Swagger documentation filter to turn property documentation into a sentence fragment.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.Swagger.CustomSwaggerDocumentFilter.Apply(Swashbuckle.Swagger.SwaggerDocument,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.IApiExplorer)">
            <inheritdoc/>
        </member>
        <member name="T:DoubleTake.Web.WebQuery">
            <summary>
            Provides extension methods for apply web queries (fields, sort and filter query parameters)
            to <see cref="T:System.Linq.IQueryable`1"/> results.
            </summary>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Filter``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Applies the specified filter query to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <returns>The filtered results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Filter``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Applies the specified filter query to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <returns>The filtered results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Linq.IQueryable{``0},System.String,System.String,System.String)">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Linq.IQueryable{``0},System.String,System.String,System.String,System.Func{Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject})">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="resultSelector">The result selector.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String)">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Func{Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject})">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="resultSelector">The result selector.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Linq.IQueryable{``0},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Linq.IQueryable{``0},System.String,System.String,System.String,System.Int32,System.Int32,System.Func{Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject})">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="resultSelector">The result selector.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.Query``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Int32,System.Int32,System.Func{Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject})">
            <summary>
            Applies the web query (filter, sort and fields query parameters) to the results.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="source">The source items.</param>
            <param name="filter">The filter query.</param>
            <param name="sort">The sort query.</param>
            <param name="fields">The fields query.</param>
            <param name="page">The page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="resultSelector">The result selector.</param>
            <returns>The query results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.RenameProperty(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            Renames a JSON property.
            </summary>
            <param name="source">The source.</param>
            <param name="existingPropertyName">Name of the existing property.</param>
            <param name="newPropertyName">New name of the property.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> with the property renamed.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.SelectProperties(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Creates a <see cref="T:Newtonsoft.Json.Linq.JObject"/> with only the specified properties.
            </summary>
            <param name="source">The source.</param>
            <param name="fieldSelector">The field selector.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> with only the specified properties.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.SetPropertyValue``1(Newtonsoft.Json.Linq.JObject,System.String,``0)">
            <summary>
            Sets the property value of a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="source">The source.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JObject"/> with the property set.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.SortBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Sorts the items by the <paramref name="sortBy"/> query parameter.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort query.</param>
            <returns>The sorted results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.SortBy``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Sorts the items by the <paramref name="sortBy"/> query parameter.
            </summary>
            <typeparam name="T">The type of the items.</typeparam>
            <param name="source">The source.</param>
            <param name="sortBy">The sort query.</param>
            <returns>The sorted results.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.ToJObject``1(``0)">
            <summary>
            Converts the source to a <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </summary>
            <typeparam name="T">The source type.</typeparam>
            <param name="source">The source.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JObject"/> created from the source.</returns>
        </member>
        <member name="M:DoubleTake.Web.WebQuery.ToJToken``1(``0)">
            <summary>
            Converts a value to a <see cref="T:Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JToken"/> created from the value.</returns>
        </member>
        <member name="T:Swashbuckle.Application.SwaggerEnabledConfigurationExtensions">
            <summary>
            Extensions for configuring an enabled swagger configuration.
            </summary>
        </member>
        <member name="M:Swashbuckle.Application.SwaggerEnabledConfigurationExtensions.EnableDoubleTakeSwaggerUi(Swashbuckle.Application.SwaggerEnabledConfiguration,System.Action{Swashbuckle.Application.SwaggerUiConfig})">
            <summary>
            Enables the double take swagger UI.
            </summary>
            <param name="swaggerEnabledConfig">The swagger enabled configuration.</param>
            <param name="configureUi">An action called to further configure the Swagger UI.</param>
        </member>
        <member name="T:Swashbuckle.Application.SwaggerUiConfigExtensions">
            <summary>
            Extensions for customizing the Swagger UI.
            </summary>
        </member>
        <member name="M:Swashbuckle.Application.SwaggerUiConfigExtensions.CustomLogo(Swashbuckle.Application.SwaggerUiConfig,System.Reflection.Assembly,System.String)">
            <summary>
            Adds a custom logo asset to replace the default Vision Solutions logo.
            </summary>
            <param name="config">The configuration.</param>
            <param name="logoAssembly">The assembly that contains the logo as an embedded resource.</param>
            <param name="resourceName">Name of the embedded resource containing the logo image in PNG format.</param>
        </member>
    </members>
</doc>
