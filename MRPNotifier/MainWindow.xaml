<controls:MetroWindow 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:MRPNotifier"
    xmlns:model="clr-namespace:MRPNotifier.Models"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
    x:Class="MRPNotifier.MainWindow" 
    Icon="cloudmovey.ico"
    x:Name="Window" 
    ContentRendered="Window_ContentRendered"
    EnableDWMDropShadow="True"   
    Background="#F9FCF6"
    Loaded="OnWindowLoaded"
    Title="MRP Worker" Height="666.671" Width="1269.191" Closing="OnClose" StateChanged="OnStateChanged" IsVisibleChanged="OnIsVisibleChanged">

    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Resources/logos.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ObjectDataProvider x:Key="workload_credentials_static"
                            ObjectType="{x:Type local:MainWindow}"
                            MethodName="workload_credentials"/>

            <DataTemplate x:Key="platform_description">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="25" Height="25" Margin="0,5,0,0" ToolTip="Platform" Stretch="Uniform">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding human_vendor}" Value="Dimension Data">
                                            <Setter Property="Content" Value="{StaticResource dimensiondata}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding human_vendor}" Value="VMWare">
                                            <Setter Property="Content" Value="{StaticResource vmware}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding human_vendor}" Value="Hyper-V">
                                            <Setter Property="Content" Value="{StaticResource hyper-v}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding description}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="workload_os">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="25" Height="25" Margin="0,5,0,0" ToolTip="Operating System" Stretch="Uniform">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding osshort}" Value="windows">
                                            <Setter Property="Content" Value="{StaticResource windows}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding osshort}" Value="ubuntu">
                                            <Setter Property="Content" Value="{StaticResource ubuntu}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding osshort}" Value="centos">
                                            <Setter Property="Content" Value="{StaticResource centos}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding osshort}" Value="redhat">
                                            <Setter Property="Content" Value="{StaticResource redhat}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding osshort}" Value="suse">
                                            <Setter Property="Content" Value="{StaticResource suse}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding human_os}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="workload_platform_description">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="25" Height="25" Margin="0,5,0,0" ToolTip="Platform" Stretch="Uniform">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding platform}" Value="Dimension Data">
                                            <Setter Property="Content" Value="{StaticResource dimensiondata}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding platform}" Value="VMWare">
                                            <Setter Property="Content" Value="{StaticResource vmware}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding platform}" Value="Hyper-V">
                                            <Setter Property="Content" Value="{StaticResource hyper-v}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding platform_description}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Shared="False" x:Key="workload_resources">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="30" Height="30" ToolTip="Workload CPU Count" Stretch="Uniform">
                        <ContentControl Content="{StaticResource appbar_hardware_cpu}" />
                    </Viewbox>
                    <TextBlock Margin="0,10,0,0" Text="{Binding vcore}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox  Width="30" Height="30" ToolTip="Workload Core Count" Stretch="Uniform">
                        <ContentControl Content="{StaticResource appbar_starwars_sith}" />
                    </Viewbox>
                    <TextBlock Margin="0,10,0,0" Text="{Binding vcpu}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" Margin="0,7,0,0" ToolTip="Workload Memory Capacity" Stretch="Uniform">
                        <ContentControl Content="{StaticResource memory}" />
                    </Viewbox>
                    <TextBlock Margin="0,10,0,0" Text="{Binding vmemory}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Workload Storage Capacity" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{StaticResource appbar_database}" />
                    </Viewbox>
                    <TextBlock Margin="0,10,0,0" Text="{Binding storage_count}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Shared="False" x:Key="platform_resources">
                <StackPanel Orientation="Horizontal">
                    <Viewbox  Width="30" Height="30" ToolTip="Workload Count" Stretch="Uniform">
                        <ContentControl Focusable="true" Content="{StaticResource appbar_workload}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding workload_count}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Logical Network Count" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{StaticResource appbar_network_workload_connecting}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding vlan_count}"/>
                    <Separator Margin="5,0,0,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                    <Viewbox Width="30" Height="30" ToolTip="Network Domain Count" Stretch="Uniform">
                        <ContentControl Focusable="False" Content="{StaticResource appbar_network}" />
                    </Viewbox>
                    <TextBlock Margin="0,7,0,0" Text="{Binding networkdomain_count}"/>
                </StackPanel>
            </DataTemplate>

            <Color x:Key="dd-100">#d3f1bc</Color>
            <Color x:Key="dd-200">#bcea9a</Color>
            <Color x:Key="dd-300">#a6e278</Color>
            <Color x:Key="dd-400">#90db57</Color>
            <Color x:Key="dd-500">#7ad435</Color>
            <Color x:Key="dd-700">#549720</Color>
            <Color x:Key="dd-800">#417619</Color>

            <Style TargetType="ContentControl" x:Key="handmouseover">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <DataTemplate x:Shared="False" x:Key="workload_hostname">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <controls:ToggleSwitch OnLabel="" OffLabel="" IsChecked="{Binding enabled, Mode=TwoWay}" />
                    <TextBlock Text="{Binding hostname}" Margin="5,10,0,0"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Shared="False" x:Key="workload_credential">
                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding Source={StaticResource workload_credentials_static}}" Grid.Column="1" HorizontalAlignment="Left" Height="Auto" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120"
            			SelectedValuePath="id"
            			SelectedValue="{Binding credential_id, Mode=TwoWay}" 
            			DisplayMemberPath="description"/>

                </StackPanel>
            </DataTemplate>

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
            <Style x:Key="alternatingStyle" TargetType="{x:Type ListViewItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#F9FCF6"/>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#BAD895"/>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <!-- the data template for all tree view items -->
            <LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#FF285AB3" Offset="0" />
                <GradientStop Color="#FF4184EC" Offset="0.5" />
                <GradientStop Color="#FF558BED" Offset="0.5" />
                <GradientStop Color="#FF7DACF0" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#FFCA6A13" Offset="0" />
                <GradientStop Color="#FFF67D0C" Offset="0.2" />
                <GradientStop Color="#FFFE7F0C" Offset="0.2" />
                <GradientStop Color="#FFFA8E12" Offset="0.5" />
                <GradientStop Color="#FFFF981D" Offset="0.5" />
                <GradientStop Color="#FFFCBC5A" Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
            <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
            <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnChecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="53" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnUnchecking">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <DockPanel x:Name="dockPanel">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                                <Grid>
                                    <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="27" Width="94">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#FFB5B5B5" Offset="0" />
                                                <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                                <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                                <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                                <GradientStop Color="#FFFEFEFE" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Grid>
                                    </Border>
                                    <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="41" Height="27" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="0" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFF0F0F0" Offset="0" />
                                                <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                                <GradientStop Color="#FFFBFBFB" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                    <Setter TargetName="On" Property="Stroke" Value="White" />
                                    <Setter TargetName="Off" Property="Stroke" Value="White" />
                                    <!-- Change Orange or Blue color here -->
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <!-- ToDo: Add Style for Isenabled == False -->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </controls:MetroWindow.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Cursor" Value="Wait" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <!-- the window button commands -->
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button ToolTip="Copy Worker GUID to Clipboard" Click="copy_guid_button_clicked">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="38" Height="20"
                   Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_cloud_download}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   />
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <!-- Ensures wait cursor is active everywhere in the window -->
                        <Setter Property="IsEnabled" Value="False" />
                        <!-- Makes everything appear disabled -->
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid>
            <TabControl Grid.Row="0" DockPanel.Dock="Top"  controls:TabControlHelper.IsUnderlined="True" x:Name="tabControl" Margin="10,10,10,176" Background="#E8F2DC">
                <TabItem Header="Workloads" controls:ControlsHelper.HeaderFontSize="18">
                    <Grid Margin="5,5,5,5" x:Name="ApplicationGroupGrid">
                        <CheckBox Name="workload_filter_toggleswitch" Margin="0,6,148,0" Checked="workload_filter_toggle" Unchecked="workload_filter_toggle" Height="13" VerticalAlignment="Top" HorizontalAlignment="Right" Width="14" />
                        <TextBox x:Name="workload_search" Height="23" TextWrapping="Wrap" TextChanged="workload_search_filter" Margin="0,0,178,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="299" />
                        <ListView  x:Name="lvWorkloads" Margin="0,33,0,0" SizeChanged="lvWorkloads_SizeChanged"  Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn CellTemplate="{StaticResource workload_hostname}">
                                        <GridViewColumnHeader Tag="platform" Content="Workload"/>
                                    </GridViewColumn>
                                    <GridViewColumn CellTemplate="{StaticResource workload_credential}">
                                        <GridViewColumnHeader Tag="platform" Content="Credential"/>
                                    </GridViewColumn>

                                    <GridViewColumn  CellTemplate="{StaticResource workload_platform_description}">
                                        <GridViewColumnHeader Tag="platform" Content="Platform"/>
                                    </GridViewColumn>
                                    <GridViewColumn  CellTemplate="{StaticResource workload_os}">
                                        <GridViewColumnHeader Tag="platform" Content="OS"/>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Resources" CellTemplate="{StaticResource workload_resources}"/>
                                    <GridViewColumn Header="Actions" >
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Margin="5,0,0,0" x:Name="delete_workload_button" Click="delete_workload_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_page_delete}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                    <Button Margin="5,0,0,0" x:Name="refresh_workload_button" Click="refresh_workload_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_inbox_in}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Label x:Name="label2" Content="Show Disabled Workloads" Margin="0,-1,0,0" VerticalAlignment="Top" Height="23" HorizontalAlignment="Right" Width="148"/>
                        <Label x:Name="current_group" FontWeight="Bold" FontSize="14" Margin="267,0,542,0" VerticalAlignment="Top" Height="28"/>

                        <Label x:Name="label" Content="Search" Margin="0,0,480,0" VerticalAlignment="Top" Height="23" HorizontalAlignment="Right" Width="45"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Platforms" controls:ControlsHelper.HeaderFontSize="18">
                    <Grid Margin="5" x:Name="PlatformGrid">

                        <ListView x:Name="lvPlatforms" SizeChanged="lvPlatforms_SizeChanged" Margin="0,40,0,0" Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                            <ListView.View>
                                <GridView x:Name="platform_grid"  >

                                    <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource platform_description}"/>
                                    <GridViewColumn Width="150" DisplayMemberBinding="{Binding human_vendor}">
                                        <GridViewColumnHeader Tag="platform" Content="Vendor"/>
                                    </GridViewColumn>
                                    <GridViewColumn  Width="100" DisplayMemberBinding="{Binding platform_version}">
                                        <GridViewColumnHeader Tag="platform" Content="Version"/>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Resources" Width="200" CellTemplate="{StaticResource platform_resources}"/>
                                    <GridViewColumn Header="Actions" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button x:Name="update_platform_button" Click="update_platform_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit_box}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                    <Button Margin="5,0,0,0" x:Name="delete_platform_button" Click="delete_platform_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                    <Button Margin="5,0,0,0" x:Name="refresh_platform_button" Click="refresh_platform_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_inbox_in}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <controls:ProgressRing x:Name="progress_indicator" Height="30" Margin="5,5,0,0" IsEnabled="True" IsActive="True" HorizontalAlignment="Left" Width="30" VerticalAlignment="Top" />

                        <Button Width="30" Margin="0,0,39,0" ToolTip="Refresh platform list from worker service" HorizontalAlignment="Right" Height="30" VerticalAlignment="Top" Click="refresh_platforms_button_clicked">
                            <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
									Visual="{DynamicResource appbar_refresh}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button ToolTip="Add platform to worker list" Click="add_platforms_button_clicked" HorizontalAlignment="Right" Width="30" Height="30" VerticalAlignment="Top">
                            <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
									Visual="{DynamicResource appbar_add}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Label x:Name="progress_message" Content="" HorizontalAlignment="Left" Margin="40,5,0,0" VerticalAlignment="Top" Height="31" Width="421"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Credentials" controls:ControlsHelper.HeaderFontSize="18">
                    <Grid Margin="5,5,5,5" x:Name="CredentialGrid">

                        <ListView x:Name="lvCredentials" Margin="0,40,0,0" SizeChanged="lvCredentials_SizeChanged" Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="250" DisplayMemberBinding="{Binding description}">
                                        <GridViewColumnHeader Tag="platform" Content="Credential"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="200" DisplayMemberBinding="{Binding username}">
                                        <GridViewColumnHeader Tag="Username" Content="Username"/>
                                    </GridViewColumn>
                                    <GridViewColumn Width="200" DisplayMemberBinding="{Binding human_type}">
                                        <GridViewColumnHeader Tag="Type" Content="Type"/>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Actions" Width="90">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button x:Name="update_credential_button" Click="update_credential_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_edit_box}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                    <Button Margin="5,0,0,0" x:Name="delete_credential_button" Click="delete_credential_button">
                                                        <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_delete}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button Width="30" Margin="0,0,39,0" ToolTip="Refresh credentials list from worker service" HorizontalAlignment="Right" Click="refresh_credentials_button_clicked" Height="30" VerticalAlignment="Top">
                            <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
									Visual="{DynamicResource appbar_refresh}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Width="30" HorizontalAlignment="Right" ToolTip="Add credential to worker service" Height="30" VerticalAlignment="Top" Click="add_credentials_button_clicked">
                            <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill"
									Visual="{DynamicResource appbar_add}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </Grid>
                </TabItem>

            </TabControl>
            <ListView x:Name="lvTasks" Margin="10,0,10,10" SizeChanged="lvTasks_SizeChanged"  Background="#FDFEFB" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2" Height="161" VerticalAlignment="Bottom">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding name}">
                            <GridViewColumnHeader Tag="platform" Content="Task"/>
                        </GridViewColumn>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding target}">
                            <GridViewColumnHeader Tag="platform" Content="Entity"/>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding initiator}">
                            <GridViewColumnHeader Tag="platform" Content="Initiator"/>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding queued_for}">
                            <GridViewColumnHeader Tag="platform" Content="Queue Time"/>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding starttime}">
                            <GridViewColumnHeader Tag="platform" Content="Start Time"/>
                        </GridViewColumn>
                        <GridViewColumn Width="100" DisplayMemberBinding="{Binding endtime}">
                            <GridViewColumnHeader Tag="platform" Content="End Time"/>
                        </GridViewColumn>

                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </Grid>
</controls:MetroWindow>
    