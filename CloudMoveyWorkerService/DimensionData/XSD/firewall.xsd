<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="urn:didata.com:api:cloud:types"
           xmlns:cloudapi="urn:didata.com:api:cloud:types"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           jaxb:version="1.0">

    <xs:include schemaLocation="general.xsd"/>

    <xs:complexType name="FirewallRuleType">
        <xs:sequence>
            <xs:element name="networkDomainId" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <!-- ACCEPT_DECISIVELY, DROP -->
            <xs:element name="action" type="xs:string"/>
            <!-- IPV4, IPV6 -->
            <xs:element name="ipVersion" type="xs:string"/>
            <!-- TCP, UDP, ICMP, IP -->
            <xs:element name="protocol" type="xs:string"/>
            <xs:element name="icmpProperties" type="cloudapi:IcmpPropertiesType" minOccurs="0"/>
            <xs:element name="source" type="cloudapi:IpAndPortFilterType"/>
            <xs:element name="destination" type="cloudapi:IpAndPortFilterType"/>
            <xs:element name="enabled" type="xs:boolean"/>
            <xs:element name="state" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="datacenterId" type="xs:string" use="required"/>
        <!-- DEFAULT_RULE, CLIENT_RULE -->
        <xs:attribute name="ruleType" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="IpAndPortFilterType">
        <xs:sequence>
            <!-- ip is required -->
            <xs:element name="ip">
                <xs:complexType>
                    <!-- address can be an IPv4 or IPv6 IP (with a prefix size if it is a Network Address rather than a specific IP) or the String "ANY" -->
                    <xs:attribute name="address" type="xs:string" use="required"/>
                    <xs:attribute name="prefixSize" type="xs:int"/>
                </xs:complexType>
            </xs:element>

            <!-- port is optional, absence indicates "ANY" port-->
            <xs:element name="port" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="begin" type="xs:int" use="required"/>
                    <!-- if end is present, it implies a port range -->
                    <xs:attribute name="end" type="xs:int"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="firewallRule" type="cloudapi:FirewallRuleType"/>

    <xs:element name="firewallRules">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="firewallRule" type="cloudapi:FirewallRuleType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attributeGroup ref="cloudapi:PagedResultAttributes"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="CreateFirewallRuleType">
        <xs:sequence>
            <xs:element name="networkDomainId" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <!-- ACCEPT_DECISIVELY,DROP -->
            <xs:element name="action" type="xs:string"/>
            <!-- IPV4,IPV6 -->
            <xs:element name="ipVersion" type="xs:string"/>
            <!-- TCP, UDP, ICMP, IP -->
            <xs:element name="protocol" type="xs:string"/>
            <xs:element name="source" type="cloudapi:IpAndPortFilterType"/>
            <xs:element name="destination" type="cloudapi:IpAndPortFilterType"/>
            <xs:element name="enabled" type="xs:boolean"/>
            <xs:element name="placement" type="cloudapi:RulePlacementType"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Note that if you have a type of ANY the code must also be ANY so in that case just leave the complete IcmpPropertiesType null -->
    <xs:complexType name="IcmpPropertiesType">
        <xs:attribute name="type" type="xs:int" use="required"/>
        <!-- 0-255 -->
        <xs:attribute name="code" type="xs:int"/>
        <!-- 0-255 - absence indicates ANY -->
    </xs:complexType>

    <xs:simpleType name="RulePositionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BEFORE"/>
            <xs:enumeration value="AFTER"/>
            <xs:enumeration value="FIRST"/>
            <xs:enumeration value="LAST"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="RulePlacementType">
        <!-- FIRST, LAST, BEFORE, AFTER -->
        <xs:attribute name="position" type="cloudapi:RulePositionType" use="required"/>
        <!-- relativeToRule takes a valid, existing rule name, required if BEFORE or AFTER is given as the position -->
        <xs:attribute name="relativeToRule" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="EditFirewallRuleType">
        <xs:sequence>
            <!-- ACCEPT_DECISIVELY, DROP -->
            <xs:element name="action" type="xs:string" minOccurs="0"/>
            <!-- IPV4, IPV6 -->
            <xs:element name="ipVersion" type="xs:string" minOccurs="0"/>
            <!-- TCP, UDP, ICMP, IP -->
            <xs:element name="protocol" type="xs:string" minOccurs="0"/>
            <xs:element name="source" type="cloudapi:IpAndPortFilterType" minOccurs="0"/>
            <xs:element name="destination" type="cloudapi:IpAndPortFilterType" minOccurs="0"/>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
            <xs:element name="placement" type="cloudapi:RulePlacementType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:element name="createFirewallRule" type="cloudapi:CreateFirewallRuleType"/>

    <xs:element name="deleteFirewallRule" type="cloudapi:IdType"/>

    <xs:element name="editFirewallRule" type="cloudapi:EditFirewallRuleType"/>

</xs:schema>